fn first_occurrence_index(nums: &[i32], target: i32) -> Option<usize> {
    let mut left = 0;
    let mut right = nums.len();

    while left < right {
        let mid = left + (right - left) / 2;

        if nums[mid] < target {
            left = mid + 1;
        } else {
            right = mid;
        }
    }

    if left < nums.len() && nums[left] == target {
        Some(left)
    } else {
        None
    }
}

fn main() {
    let sorted_array = vec![1, 2, 3, 4, 4, 5, 5, 6, 7];
    let target = 4;
    match first_occurrence_index(&sorted_array, target) {
        Some(index) => println!("First occurrence of {} is at index {}", target, index),
        None => println!("{} not found in the array", target),
    }
}
